[{"/opt/lampp/htdocs/pages/todoapp/src/reportWebVitals.js":"1","/opt/lampp/htdocs/pages/todoapp/src/index.js":"2","/opt/lampp/htdocs/pages/todoapp/src/App.js":"3","/opt/lampp/htdocs/pages/todoapp/src/components/TaskRow.js":"4","/opt/lampp/htdocs/pages/todoapp/src/components/TaskBanner.js":"5","/opt/lampp/htdocs/pages/todoapp/src/components/AddTask.js":"6","/opt/lampp/htdocs/pages/todoapp/src/components/TaskCompleted.js":"7"},{"size":362,"mtime":1611843126691,"results":"8","hashOfConfig":"9"},{"size":568,"mtime":1611843798465,"results":"10","hashOfConfig":"9"},{"size":3658,"mtime":1611939574164,"results":"11","hashOfConfig":"9"},{"size":5573,"mtime":1611939581674,"results":"12","hashOfConfig":"9"},{"size":356,"mtime":1611932907147,"results":"13","hashOfConfig":"9"},{"size":1023,"mtime":1611928647574,"results":"14","hashOfConfig":"9"},{"size":794,"mtime":1611930582647,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gj3vur",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/opt/lampp/htdocs/pages/todoapp/src/reportWebVitals.js",[],["34","35"],"/opt/lampp/htdocs/pages/todoapp/src/index.js",[],["36","37"],"/opt/lampp/htdocs/pages/todoapp/src/App.js",[],"/opt/lampp/htdocs/pages/todoapp/src/components/TaskRow.js",["38"],"/opt/lampp/htdocs/pages/todoapp/src/components/TaskBanner.js",[],"/opt/lampp/htdocs/pages/todoapp/src/components/AddTask.js",["39"],"import React, { useState } from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator'\n\n//Material UI\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nexport const AddTask = props => {\n\n    const [newTaskName, setNewTaskName] = useState('')\n\n    const updateNewTaskValue = e => setNewTaskName(e.target.value);\n\n    const creatNewTask = () => {\n        props.callback(newTaskName);\n        setNewTaskName('');\n    };\n    \n    return (\n        <div className=\"my-1\">\n            <TextField\n                variant=\"outlined\"\n                label=\"Add a Task\"\n                type=\"text\"\n                multiline\n                rowsMax={10}\n                className=\"form-controll col-9\"\n                value={newTaskName}\n                onChange={updateNewTaskValue}\n                required\n            />\n            <Button color=\"primary\" className=\"mt-2\" onClick={creatNewTask}>\n                Add\n            </Button>\n        </div>\n    );\n}","/opt/lampp/htdocs/pages/todoapp/src/components/TaskCompleted.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":70,"column":28,"nodeType":"50","messageId":"51","endLine":70,"endColumn":45},{"ruleId":"48","severity":1,"message":"52","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":23},{"ruleId":"42","replacedBy":"53"},{"ruleId":"44","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'setUpdateTaskDone' is assigned a value but never used.","Identifier","unusedVar","'TextValidator' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]